<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ex_cannotFindProperty" xml:space="preserve">
    <value>找不到指定属性</value>
  </data>
  <data name="ex_cannotFindVariable" xml:space="preserve">
    <value>找不到指定变量</value>
  </data>
  <data name="ex_cannotFindWebPageByName" xml:space="preserve">
    <value>找不到指定名称的任务</value>
  </data>
  <data name="ex_CommandAndLine" xml:space="preserve">
    <value>第{0}行：{1}</value>
  </data>
  <data name="ex_compareFailed" xml:space="preserve">
    <value>对比失败</value>
  </data>
  <data name="ex_getContentFailed" xml:space="preserve">
    <value>获取最新内容失败</value>
  </data>
  <data name="ex_GetResponse" xml:space="preserve">
    <value>获取HTTP响应失败</value>
  </data>
  <data name="ex_htmlParseError" xml:space="preserve">
    <value>Html解析失败</value>
  </data>
  <data name="ex_invalidPropertyType" xml:space="preserve">
    <value>无效的属性类型</value>
  </data>
  <data name="ex_jsonParseError" xml:space="preserve">
    <value>JSON解析失败</value>
  </data>
  <data name="ex_jsonPathError" xml:space="preserve">
    <value>JSON路径错误，无法找到指定元素</value>
  </data>
  <data name="ex_parseError" xml:space="preserve">
    <value>解析错误</value>
  </data>
  <data name="ex_syntaxError" xml:space="preserve">
    <value>语法错误</value>
  </data>
  <data name="ex_unknownCommand" xml:space="preserve">
    <value>未知命令</value>
  </data>
  <data name="ex_urlIsEmpty" xml:space="preserve">
    <value>Url为空</value>
  </data>
  <data name="ex_webPageNameNotUnique" xml:space="preserve">
    <value>该名称的任务不唯一</value>
  </data>
  <data name="ex_whiteSpaceIsEmpty" xml:space="preserve">
    <value>白名单为空</value>
  </data>
  <data name="ex_wrongPropertyValue" xml:space="preserve">
    <value>属性赋值错误</value>
  </data>
  <data name="ex_wrongType" xml:space="preserve">
    <value>变量类型错误</value>
  </data>
  <data name="log_scriptExcuteFailed" xml:space="preserve">
    <value>脚本执行失败</value>
  </data>
  <data name="log_scriptExcuteSucceed" xml:space="preserve">
    <value>脚本执行成功</value>
  </data>
  <data name="log_triggerCommandError" xml:space="preserve">
    <value>脚本执行错误输出</value>
  </data>
  <data name="log_triggerCommandOutput" xml:space="preserve">
    <value>脚本执行命令输出</value>
  </data>
  <data name="log_triggerFailed" xml:space="preserve">
    <value>触发器触发但执行失败</value>
  </data>
  <data name="log_triggerSucceed" xml:space="preserve">
    <value>触发器触发并执行成功</value>
  </data>
  <data name="log_webpageCompareFailed" xml:space="preserve">
    <value>网页对比失败</value>
  </data>
  <data name="log_webpageCompareSucceed" xml:space="preserve">
    <value>网页对比成功</value>
  </data>
  <data name="model_unnamed" xml:space="preserve">
    <value>未命名</value>
  </data>
</root>